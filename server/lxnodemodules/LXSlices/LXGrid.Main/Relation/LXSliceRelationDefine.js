// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceRelationDefine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = require("LXGrid.Common/LXSliceDefine").LXGrid;
    var Slice = Ice.Slice;

    LXGrid.Main = __M.module("LXGrid.Main");

    LXGrid.Main.Relation = __M.module("LXGrid.Main.Relation");

    LXGrid.Main.Relation.LXEnumErrorRelation = Slice.defineEnum([
        ['LXErrorContactAlreadyExist', 3000], ['LXErrorInvitationNotExist', 3001], ['LXErrorContactNotExist', 3002], ['LXErrorRelationDeleteNotSupport', 3003], ['LXErrorRelationRecordExist', 3004],
        ['LXErrorContactLabelNotExist', 3005], ['LXErrorRelationNotExist', 3006], ['LXErrorContactRemoveNotSupport', 3007], ['LXErrorContactChildOverlimit', 3008], ['LXErrorContactParentOverlimit', 3009]]);

    LXGrid.Main.Relation.LXEnumRelationType = Slice.defineEnum([
        ['LXRelationTypeNone', 0], ['LXRelationTypeFollow', 1], ['LXRelationTypeFan', 2], ['LXRelationTypeFriend', 3], ['LXRelationTypeBlacklist', 4]]);

    LXGrid.Main.Relation.LXEnumRelationMode = Slice.defineEnum([
        ['LXRelationModeNormal', 0], ['LXRelationModeParent', 103], ['LXRelationModeChild', 201], ['LXRelationModeOfficial', 1001]]);

    LXGrid.Main.Relation.LXEnumRelationModeProp = Slice.defineEnum([
        ['LXRelationPropNone', 0], ['LXRelationPropFather', 1], ['LXRelationPropMother', 2], ['LXRelationPropGrandfatherPaternal', 3], ['LXRelationPropGrandmotherPaternal', 4],
        ['LXRelationPropGrandfatherMaternal', 5], ['LXRelationPropGrandmotherMaternal', 6], ['LXRelationPropUncle', 7], ['LXRelationPropAunt', 8], ['LXRelationPropFatherSisterHusband', 21],
        ['LXRelationPropFatherSister', 22], ['LXRelationPropMotherBrother', 23], ['LXRelationPropMotherBrotherWife', 24], ['LXRelationPropMotherSisterHusband', 25], ['LXRelationPropMotherSister', 26],
        ['LXRelationPropElderBrother', 9], ['LXRelationPropElderSister', 10], ['LXRelationPropOther', 20], ['LXRelationPropSon', 11], ['LXRelationPropDaughter', 12],
        ['LXRelationPropGrandson', 13], ['LXRelationPropGranddaughter', 14], ['LXRelationPropDaughterSon', 29], ['LXRelationPropDaughterDaughter', 30], ['LXRelationPropNephew', 15],
        ['LXRelationPropNiece', 16], ['LXRelationPropSisterSon', 27], ['LXRelationPropSisterDaughter', 28], ['LXRelationPropYoungerBrother', 17], ['LXRelationPropYoungerSister', 18]]);

    LXGrid.Main.Relation.LXEnumContactStarType = Slice.defineEnum([
        ['LXStarTypeNone', 0], ['LXStarTypeStar', 1]]);

    LXGrid.Main.Relation.LXEnumInvitationType = Slice.defineEnum([
        ['LXInvitationSend', 1], ['LXInvitationRecv', 2]]);

    LXGrid.Main.Relation.LXEnumInvitationState = Slice.defineEnum([
        ['LXInvitationWait', 0], ['LXInvitationAgree', 1], ['LXInvitationRefuse', 2], ['LXInvitationIgnore', 4]]);

    LXGrid.Main.Relation.LXInvitation = Slice.defineObject(
        function(ask_id, user_id, opp_user_id, ask_type, ask_state, remark, tag, in_time)
        {
            Ice.Object.call(this);
            this.ask_id = ask_id !== undefined ? ask_id : 0;
            this.user_id = user_id !== undefined ? user_id : 0;
            this.opp_user_id = opp_user_id !== undefined ? opp_user_id : 0;
            this.ask_type = ask_type !== undefined ? ask_type : 0;
            this.ask_state = ask_state !== undefined ? ask_state : 0;
            this.remark = remark !== undefined ? remark : "";
            this.tag = tag !== undefined ? tag : 0;
            this.in_time = in_time !== undefined ? in_time : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::Main::Relation::LXInvitation"
        ],
        -1,
        function(__os)
        {
            __os.writeLong(this.ask_id);
            __os.writeInt(this.user_id);
            __os.writeInt(this.opp_user_id);
            __os.writeInt(this.ask_type);
            __os.writeInt(this.ask_state);
            __os.writeString(this.remark);
            __os.writeInt(this.tag);
            __os.writeLong(this.in_time);
        },
        function(__is)
        {
            this.ask_id = __is.readLong();
            this.user_id = __is.readInt();
            this.opp_user_id = __is.readInt();
            this.ask_type = __is.readInt();
            this.ask_state = __is.readInt();
            this.remark = __is.readString();
            this.tag = __is.readInt();
            this.in_time = __is.readLong();
        },
        false);

    LXGrid.Main.Relation.LXInvitationPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.Main.Relation.LXInvitation.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.Main.Relation.LXInvitation, LXGrid.Main.Relation.LXInvitationPrx);
    Slice.defineSequence(LXGrid.Main.Relation, "LXInvitationSeqHelper", "Ice.ObjectHelper", false, "LXGrid.Main.Relation.LXInvitation");

    LXGrid.Main.Relation.LXContact = Slice.defineObject(
        function(opp_user_id, rel_type, rel_mode, rel_mode_prop, remark, star, in_time)
        {
            Ice.Object.call(this);
            this.opp_user_id = opp_user_id !== undefined ? opp_user_id : 0;
            this.rel_type = rel_type !== undefined ? rel_type : 0;
            this.rel_mode = rel_mode !== undefined ? rel_mode : 0;
            this.rel_mode_prop = rel_mode_prop !== undefined ? rel_mode_prop : 0;
            this.remark = remark !== undefined ? remark : "";
            this.star = star !== undefined ? star : 0;
            this.in_time = in_time !== undefined ? in_time : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::Main::Relation::LXContact"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.opp_user_id);
            __os.writeInt(this.rel_type);
            __os.writeInt(this.rel_mode);
            __os.writeInt(this.rel_mode_prop);
            __os.writeString(this.remark);
            __os.writeInt(this.star);
            __os.writeLong(this.in_time);
        },
        function(__is)
        {
            this.opp_user_id = __is.readInt();
            this.rel_type = __is.readInt();
            this.rel_mode = __is.readInt();
            this.rel_mode_prop = __is.readInt();
            this.remark = __is.readString();
            this.star = __is.readInt();
            this.in_time = __is.readLong();
        },
        false);

    LXGrid.Main.Relation.LXContactPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.Main.Relation.LXContact.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.Main.Relation.LXContact, LXGrid.Main.Relation.LXContactPrx);
    Slice.defineSequence(LXGrid.Main.Relation, "LXContactSeqHelper", "Ice.ObjectHelper", false, "LXGrid.Main.Relation.LXContact");
    Slice.defineDictionary(LXGrid.Main.Relation, "LXContactDict", "LXContactDictHelper", "Ice.IntHelper", "LXGrid.Main.Relation.LXContactSeqHelper", false, undefined, undefined, Ice.ArrayUtil.equals);
    Slice.defineDictionary(LXGrid.Main.Relation, "LXContactIDDict", "LXContactIDDictHelper", "Ice.IntHelper", "Ice.IntSeqHelper", false, undefined, undefined, Ice.ArrayUtil.equals);
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
