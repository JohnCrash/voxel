// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceZone.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = __M.require(module, 
    [
        "LXGrid.Common/LXSliceDefine",
        "LXGrid.Main/Zone/LXSliceZoneEnum",
        "LXGrid.Main/Zone/LXSliceZoneDefine"
    ]).LXGrid;
    
    var Slice = Ice.Slice;

    LXGrid.Main = __M.module("LXGrid.Main");

    LXGrid.Main.Zone = __M.module("LXGrid.Main.Zone");

    Object.defineProperty(LXGrid.Main.Zone, 'IObjectName_Zone', {
        value: "IObjectZone"
    });

    LXGrid.Main.Zone.IObjectZone = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            LXGrid.Common.IObjectBase
        ], 2,
        [
            "::Ice::Object",
            "::LXGrid::Common::IObjectBase",
            "::LXGrid::Main::Zone::IObjectZone"
        ],
        -1, undefined, undefined, false);

    LXGrid.Main.Zone.IObjectZonePrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.Main.Zone.IObjectZone.ice_staticId, [
        LXGrid.Common.IObjectBasePrx]);

    Slice.defineOperations(LXGrid.Main.Zone.IObjectZone, LXGrid.Main.Zone.IObjectZonePrx,
    {
        "QueryZoneIdByArea": [, , , , , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"], [3], [3], [3]], [["Ice.IntSeqHelper"]], , , ],
        "GetZoneSimple": [, , , , , [LXGrid.Common.LXReturn], [[3]], [["LXGrid.Main.Zone.LXZoneSimple", true]], , , true],
        "GetZoneSimpleSeq": [, , , , , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], [["LXGrid.Main.Zone.LXZoneSimpleSeqHelper"]], , , true],
        "GetZoneInfo": [, , , , , [LXGrid.Common.LXReturn], [[3]], [["LXGrid.Main.Zone.LXZoneInfo", true]], , , true],
        "GetZoneInfoSeq": [, , , , , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], [["LXGrid.Main.Zone.LXZoneInfoSeqHelper"]], , , true],
        "CreateZone": [, , , , , [LXGrid.Common.LXReturn], [[3], ["LXGrid.Main.Zone.LXZoneInfo", true]], [[3]], , true, ],
        "DeleteZone": [, , , 1, , [LXGrid.Common.LXReturn], [[3]], , , , ],
        "SetZoneName": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [7]], , , , ],
        "SetZoneParentId": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SetZoneParentMode": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SetZoneStatus": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SetZoneModeForm": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SetZoneModeOpen": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SetZoneModeAdmit": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SetZoneModeOpenSetting": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [7]], , , , ],
        "SetZoneComment": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [7]], , , , ],
        "SetZonePriority": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SetZoneArea": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3], [3]], , , , ],
        "ClearZoneRegisterCache": [, , , 1, , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], , , , ],
        "GetZoneChildren": [, , , , , [LXGrid.Common.LXReturn], [[3], [3]], [["Ice.IntSeqHelper"]], , , ],
        "GetZoneChildrenEx": [, , , , , [LXGrid.Common.LXReturn], [[3], ["Ice.IntSeqHelper"]], [["Ice.IntSeqHelper"]], , , ],
        "GetZoneAllChildren": [, , , , , [LXGrid.Common.LXReturn], [[3], [3]], [["Ice.IntSeqHelper"]], , , ],
        "GetZoneAllChildrenEx": [, , , , , [LXGrid.Common.LXReturn], [[3], ["Ice.IntSeqHelper"]], [["Ice.IntSeqHelper"]], , , ],
        "ClearZoneChildrenCache": [, , , 1, , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], , , , ],
        "GetZoneMemberIds": [, , , , , [LXGrid.Common.LXReturn], [[3], [3], [3]], [["Ice.IntSeqHelper"]], , , ],
        "GetZoneMember": [, , , , , [LXGrid.Common.LXReturn], [[3], [3], [3]], [["LXGrid.Main.Zone.LXZoneMemberSeqHelper"]], , , ],
        "AddMember": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3], [3], [3], [3], [3], [3]], , , , ],
        "AddMembers": [, , , 1, , [LXGrid.Common.LXReturn], [[3], ["Ice.IntSeqHelper"], [3], [3], [3], [3], [3], [3]], , , , ],
        "RemoveMember": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "RemoveAllMembers": [, , , 1, , [LXGrid.Common.LXReturn], [[3]], , , , ],
        "SetMemberRole": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3]], , , , ],
        "SetMemberEduRole": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3]], , , , ],
        "SetMemberPermission": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3]], , , , ],
        "SetMemberCustomizeName": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [7]], , , , ],
        "SetMemberStatus": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3]], , , , ],
        "IncreaseMemberExper": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3]], , , , ],
        "ClearZoneMemberCache": [, , , 1, , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], , , , ],
        "GetZoneMemberApply": [, , , , , [LXGrid.Common.LXReturn], [[3]], [["LXGrid.Main.Zone.LXZoneMemberApplySeqHelper"]], , , ],
        "GetZoneMemberApplying": [, , , , , [LXGrid.Common.LXReturn], [[3]], [["LXGrid.Main.Zone.LXZoneMemberApplySeqHelper"]], , , ],
        "GetZoneMemberAdmitted": [, , , , , [LXGrid.Common.LXReturn], [[3]], [["LXGrid.Main.Zone.LXZoneMemberApplySeqHelper"]], , , ],
        "AddZoneMemberApply": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3], [7]], , , , ],
        "AdmitZoneMemberApply": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [LXGrid.Main.Zone.LXEnumZoneApplyMode.__helper], [3]], , , , ],
        "DeleteZoneMemberApply": [, , , 1, , [LXGrid.Common.LXReturn], [[3], ["Ice.IntSeqHelper"]], , , , ],
        "ClearZoneMemberApplyCache": [, , , 1, , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], , , , ]
    });

    Object.defineProperty(LXGrid.Main.Zone, 'IObjectName_ZoneRelation', {
        value: "IObjectZoneRelation"
    });

    LXGrid.Main.Zone.IObjectZoneRelation = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            LXGrid.Common.IObjectBase
        ], 2,
        [
            "::Ice::Object",
            "::LXGrid::Common::IObjectBase",
            "::LXGrid::Main::Zone::IObjectZoneRelation"
        ],
        -1, undefined, undefined, false);

    LXGrid.Main.Zone.IObjectZoneRelationPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.Main.Zone.IObjectZoneRelation.ice_staticId, [
        LXGrid.Common.IObjectBasePrx]);

    Slice.defineOperations(LXGrid.Main.Zone.IObjectZoneRelation, LXGrid.Main.Zone.IObjectZoneRelationPrx,
    {
        "GetUserZoneRelation": [, , , , , [LXGrid.Common.LXReturn], [[3], [3]], [["LXGrid.Main.Zone.LXUserZoneRelationSeqHelper"]], , , ],
        "GetUserZoneRelationEx": [, , , , , [LXGrid.Common.LXReturn], [[3], ["Ice.IntSeqHelper"]], [["LXGrid.Main.Zone.LXUserZoneRelationSeqHelper"]], , , ],
        "GetUserZoneRelationIds": [, , , , , [LXGrid.Common.LXReturn], [[3], [3]], [["Ice.IntSeqHelper"]], , , ],
        "GetUserZoneRelationIdsEx": [, , , , , [LXGrid.Common.LXReturn], [[3], ["Ice.IntSeqHelper"]], [["Ice.IntSeqHelper"]], , , ],
        "CheckMember": [, , , , , [LXGrid.Common.LXReturn], [[3], [3], [3]], , , , ],
        "ClearUserZoneRelation": [, , , 1, , [LXGrid.Common.LXReturn], [[3]], , , , ],
        "ClearZoneRelationCache": [, , , 1, , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], , , , ]
    });
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
