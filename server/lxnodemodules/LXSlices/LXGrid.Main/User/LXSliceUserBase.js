// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceUserBase.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = __M.require(module, 
    [
        "LXGrid.Common/LXSliceDefine",
        "LXGrid.Main/User/LXSliceUserDefine"
    ]).LXGrid;
    
    var Slice = Ice.Slice;

    LXGrid.Main = __M.module("LXGrid.Main");

    LXGrid.Main.User = __M.module("LXGrid.Main.User");

    Object.defineProperty(LXGrid.Main.User, 'IObjectUserBaseName', {
        value: "IObjectUserBase"
    });

    LXGrid.Main.User.IObjectUserBase = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            LXGrid.Common.IObjectBase
        ], 2,
        [
            "::Ice::Object",
            "::LXGrid::Common::IObjectBase",
            "::LXGrid::Main::User::IObjectUserBase"
        ],
        -1, undefined, undefined, false);

    LXGrid.Main.User.IObjectUserBasePrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.Main.User.IObjectUserBase.ice_staticId, [
        LXGrid.Common.IObjectBasePrx]);

    Slice.defineOperations(LXGrid.Main.User.IObjectUserBase, LXGrid.Main.User.IObjectUserBasePrx,
    {
        "IsValidUser": [, , , 1, , [LXGrid.Common.LXReturn], [[3]], , , , ],
        "GetUserInfo": [, , , 1, , [LXGrid.Common.LXReturn], [[3]], [["LXGrid.Main.User.LXUserInfo", true]], , , true],
        "GetUserInfoSeq": [, , , 1, , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], [["LXGrid.Main.User.LXUserInfoSeqHelper"]], , , true],
        "GetUserInfoExtend": [, , , 1, , [LXGrid.Common.LXReturn], [[3]], [["LXGrid.Main.User.LXUserInfoExtend", true]], , , true],
        "GetUserInfoExtendSeq": [, , , 1, , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], [["LXGrid.Main.User.LXUserInfoExtendSeqHelper"]], , , true],
        "GetUserInfoByLoginName": [, , , , , [LXGrid.Common.LXReturn], [[7]], [["LXGrid.Main.User.LXUserInfo", true]], , , true],
        "GetUserInfoExtendByLoginName": [, , , , , [LXGrid.Common.LXReturn], [[7]], [["LXGrid.Main.User.LXUserInfoExtend", true]], , , true],
        "SetUserSign": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [7]], , , , ],
        "SetUserNickName": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [7]], , , , ],
        "SetUserGender": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [LXGrid.Main.User.LXEnumUserGender.__helper]], , , , ],
        "SetUserRole": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [LXGrid.Main.User.LXEnumUserRole.__helper]], , , , ],
        "IncreaseExper": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SynUserExper": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3]], , , , ],
        "SetUserMultiInfo": [, , , 1, , [LXGrid.Common.LXReturn], [[3], ["LXGrid.Common.IntStringDictHelper"]], , , , ],
        "ClearCache": [, , , 1, , [LXGrid.Common.LXReturn], [["Ice.IntSeqHelper"]], , , , ],
        "GetPhoneNo": [, , , 1, , [LXGrid.Common.LXReturn], [[3]], [[7]], , , ],
        "SetPhoneNo": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [7]], , , , ],
        "DeleteUser": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [1]], , , , ],
        "DeleteUserInfo": [, , , 1, , [LXGrid.Common.LXReturn], [[3]], , , , ],
        "SetUserAppMember": [, , , 1, , [LXGrid.Common.LXReturn], [[3], [3], [3]], , , , ],
        "IsAppMember": [, , , , , [LXGrid.Common.LXReturn], [[3], [3]], [[1]], , , ]
    });
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
