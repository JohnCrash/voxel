// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceAppAdminDefine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = __M.require(module, 
    [
        "LXGrid.Common/LXSliceDefine",
        "LXGrid.Main/Profile/LXSliceUserProfileDefine"
    ]).LXGrid;
    
    var Slice = Ice.Slice;

    LXGrid.App = __M.module("LXGrid.App");

    LXGrid.App.AppAdmin = __M.module("LXGrid.App.AppAdmin");

    LXGrid.App.AppAdmin.LXEnumAppRoleType = Slice.defineEnum([
        ['LXAppRoleType_Create', 1], ['LXAppRoleType_Delete', 2], ['LXAppRoleType_Modify', 4], ['LXAppRoleType_Search', 8]]);

    LXGrid.App.AppAdmin.LXAppAdmin = Slice.defineObject(
        function(appid, userid, role, areaids)
        {
            Ice.Object.call(this);
            this.appid = appid !== undefined ? appid : 0;
            this.userid = userid !== undefined ? userid : 0;
            this.role = role !== undefined ? role : 0;
            this.areaids = areaids !== undefined ? areaids : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::AppAdmin::LXAppAdmin"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.appid);
            __os.writeInt(this.userid);
            __os.writeInt(this.role);
            Ice.IntSeqHelper.write(__os, this.areaids);
        },
        function(__is)
        {
            this.appid = __is.readInt();
            this.userid = __is.readInt();
            this.role = __is.readInt();
            this.areaids = Ice.IntSeqHelper.read(__is);
        },
        false);

    LXGrid.App.AppAdmin.LXAppAdminPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.AppAdmin.LXAppAdmin.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.AppAdmin.LXAppAdmin, LXGrid.App.AppAdmin.LXAppAdminPrx);
    Slice.defineSequence(LXGrid.App.AppAdmin, "LXAppAdminSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.AppAdmin.LXAppAdmin");

    LXGrid.App.AppAdmin.LXAppBan = Slice.defineObject(
        function(appid, userid, starttime, time, creator)
        {
            Ice.Object.call(this);
            this.appid = appid !== undefined ? appid : 0;
            this.userid = userid !== undefined ? userid : 0;
            this.starttime = starttime !== undefined ? starttime : 0;
            this.time = time !== undefined ? time : 0;
            this.creator = creator !== undefined ? creator : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::AppAdmin::LXAppBan"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.appid);
            __os.writeInt(this.userid);
            __os.writeLong(this.starttime);
            __os.writeLong(this.time);
            __os.writeInt(this.creator);
        },
        function(__is)
        {
            this.appid = __is.readInt();
            this.userid = __is.readInt();
            this.starttime = __is.readLong();
            this.time = __is.readLong();
            this.creator = __is.readInt();
        },
        false);

    LXGrid.App.AppAdmin.LXAppBanPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.AppAdmin.LXAppBan.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.AppAdmin.LXAppBan, LXGrid.App.AppAdmin.LXAppBanPrx);
    Slice.defineSequence(LXGrid.App.AppAdmin, "LXAppBanSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.AppAdmin.LXAppBan");
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
