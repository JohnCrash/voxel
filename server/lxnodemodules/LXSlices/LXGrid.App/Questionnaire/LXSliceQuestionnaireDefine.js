// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceQuestionnaireDefine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = __M.require(module, 
    [
        "LXGrid.Common/LXSliceDefine",
        "LXGrid.Main/Profile/LXSliceUserProfileDefine"
    ]).LXGrid;
    
    var Slice = Ice.Slice;

    LXGrid.App = __M.module("LXGrid.App");

    LXGrid.App.Questionnaire = __M.module("LXGrid.App.Questionnaire");

    LXGrid.App.Questionnaire.LXEnumErrorQuestionnaire = Slice.defineEnum([
        ['LXErrorUserAlreadySubmit', 8001], ['LXErrorDeviceAlreadySubmit', 8002], ['LXErrorTemplateTypeChildNotNull', 8003], ['LXErrorTemplateTypeNotExist', 8004], ['LXErrorAssetFreezeUserGolds', 8005],
        ['LXErrorQuestionnaireNoStart', 8006], ['LXErrorQuestionnaireExpired', 8007], ['LXErrorAnswerNumber', 8008], ['LXErrorAnswerOption', 8009], ['LXErrorAssetChangeUserGolds', 8010]]);

    LXGrid.App.Questionnaire.LXEnumQuestStatus = Slice.defineEnum([
        ['LXEnumStatus_Normal', 0], ['LXEnumStatus_Delete', 1]]);

    LXGrid.App.Questionnaire.LXEnumSortType = Slice.defineEnum([
        ['LXEnumSortType_Usetime', 0], ['LXEnumSortType_UseCount', 1]]);

    LXGrid.App.Questionnaire.LXEnumVisibleType = Slice.defineEnum([
        ['LXVisibleType_Publisher', 0], ['LXVisibleType_Consumer', 1]]);

    LXGrid.App.Questionnaire.LXEnumSubmitType = Slice.defineEnum([
        ['LXSubmitType_Null', 0], ['LXSumbitType_SingleDevice', 1], ['LXSubmitType_Anonymous', 2]]);

    LXGrid.App.Questionnaire.LXEnumScopeType = Slice.defineEnum([
        ['LXScopeType_ProvinceEdu', 1], ['LXScopeType_CityEdu', 2], ['LXScopeType_CountyEdu', 4], ['LXScopeType_AreaSch', 8], ['LXScopeType_School', 16],
        ['LXScopeType_Class', 32], ['LXScopeType_Zone', 64], ['LXScopeType_Person', 128]]);

    LXGrid.App.Questionnaire.LXEnumQuestionType = Slice.defineEnum([
        ['LXQuestionType_Single', 1], ['LXQuestionType_Multiple', 2], ['LXQuestionType_Blank', 3]]);
    Slice.defineDictionary(LXGrid.App.Questionnaire, "LXScopeViewDict", "LXScopeViewDictHelper", "Ice.IntHelper", "Ice.IntSeqHelper", false, undefined, undefined, Ice.ArrayUtil.equals);

    LXGrid.App.Questionnaire.LXScope = Slice.defineObject(
        function(scopeview, scoperoles, scopegrades)
        {
            Ice.Object.call(this);
            this.scopeview = scopeview !== undefined ? scopeview : null;
            this.scoperoles = scoperoles !== undefined ? scoperoles : null;
            this.scopegrades = scopegrades !== undefined ? scopegrades : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXScope"
        ],
        -1,
        function(__os)
        {
            LXGrid.App.Questionnaire.LXScopeViewDictHelper.write(__os, this.scopeview);
            Ice.IntSeqHelper.write(__os, this.scoperoles);
            Ice.IntSeqHelper.write(__os, this.scopegrades);
        },
        function(__is)
        {
            this.scopeview = LXGrid.App.Questionnaire.LXScopeViewDictHelper.read(__is);
            this.scoperoles = Ice.IntSeqHelper.read(__is);
            this.scopegrades = Ice.IntSeqHelper.read(__is);
        },
        false);

    LXGrid.App.Questionnaire.LXScopePrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXScope.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXScope, LXGrid.App.Questionnaire.LXScopePrx);

    LXGrid.App.Questionnaire.LXOption = Slice.defineObject(
        function(starttime, endtime, visibletype, submittype, prizecoin, prizetotal, prizecount)
        {
            Ice.Object.call(this);
            this.starttime = starttime !== undefined ? starttime : 0;
            this.endtime = endtime !== undefined ? endtime : 0;
            this.visibletype = visibletype !== undefined ? visibletype : 0;
            this.submittype = submittype !== undefined ? submittype : 0;
            this.prizecoin = prizecoin !== undefined ? prizecoin : 0;
            this.prizetotal = prizetotal !== undefined ? prizetotal : 0;
            this.prizecount = prizecount !== undefined ? prizecount : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXOption"
        ],
        -1,
        function(__os)
        {
            __os.writeLong(this.starttime);
            __os.writeLong(this.endtime);
            __os.writeInt(this.visibletype);
            __os.writeInt(this.submittype);
            __os.writeInt(this.prizecoin);
            __os.writeInt(this.prizetotal);
            __os.writeInt(this.prizecount);
        },
        function(__is)
        {
            this.starttime = __is.readLong();
            this.endtime = __is.readLong();
            this.visibletype = __is.readInt();
            this.submittype = __is.readInt();
            this.prizecoin = __is.readInt();
            this.prizetotal = __is.readInt();
            this.prizecount = __is.readInt();
        },
        false);

    LXGrid.App.Questionnaire.LXOptionPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXOption.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXOption, LXGrid.App.Questionnaire.LXOptionPrx);

    LXGrid.App.Questionnaire.LXQuest = Slice.defineObject(
        function(questid, name, describe, cover, creatorname, creator, createtime, option)
        {
            Ice.Object.call(this);
            this.questid = questid !== undefined ? questid : "";
            this.name = name !== undefined ? name : "";
            this.describe = describe !== undefined ? describe : "";
            this.cover = cover !== undefined ? cover : "";
            this.creatorname = creatorname !== undefined ? creatorname : "";
            this.creator = creator !== undefined ? creator : 0;
            this.createtime = createtime !== undefined ? createtime : 0;
            this.option = option !== undefined ? option : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXQuest"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.questid);
            __os.writeString(this.name);
            __os.writeString(this.describe);
            __os.writeString(this.cover);
            __os.writeString(this.creatorname);
            __os.writeInt(this.creator);
            __os.writeLong(this.createtime);
            __os.writeObject(this.option);
        },
        function(__is)
        {
            var self = this;
            this.questid = __is.readString();
            this.name = __is.readString();
            this.describe = __is.readString();
            this.cover = __is.readString();
            this.creatorname = __is.readString();
            this.creator = __is.readInt();
            this.createtime = __is.readLong();
            __is.readObject(function(__o){ self.option = __o; }, LXGrid.App.Questionnaire.LXOption);
        },
        false);

    LXGrid.App.Questionnaire.LXQuestPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXQuest.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXQuest, LXGrid.App.Questionnaire.LXQuestPrx);
    Slice.defineSequence(LXGrid.App.Questionnaire, "LXQuestSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Questionnaire.LXQuest");

    LXGrid.App.Questionnaire.LXQuestion = Slice.defineObject(
        function(describe, type, minimum, maximum, options)
        {
            Ice.Object.call(this);
            this.describe = describe !== undefined ? describe : "";
            this.type = type !== undefined ? type : 0;
            this.minimum = minimum !== undefined ? minimum : 0;
            this.maximum = maximum !== undefined ? maximum : 0;
            this.options = options !== undefined ? options : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXQuestion"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.describe);
            __os.writeInt(this.type);
            __os.writeInt(this.minimum);
            __os.writeInt(this.maximum);
            Ice.StringSeqHelper.write(__os, this.options);
        },
        function(__is)
        {
            this.describe = __is.readString();
            this.type = __is.readInt();
            this.minimum = __is.readInt();
            this.maximum = __is.readInt();
            this.options = Ice.StringSeqHelper.read(__is);
        },
        false);

    LXGrid.App.Questionnaire.LXQuestionPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXQuestion.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXQuestion, LXGrid.App.Questionnaire.LXQuestionPrx);
    Slice.defineSequence(LXGrid.App.Questionnaire, "LXQuestionSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Questionnaire.LXQuestion");

    LXGrid.App.Questionnaire.LXSubmitStatus = Slice.defineObject(
        function(usersubmit, devicesubmit)
        {
            Ice.Object.call(this);
            this.usersubmit = usersubmit !== undefined ? usersubmit : false;
            this.devicesubmit = devicesubmit !== undefined ? devicesubmit : false;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXSubmitStatus"
        ],
        -1,
        function(__os)
        {
            __os.writeBool(this.usersubmit);
            __os.writeBool(this.devicesubmit);
        },
        function(__is)
        {
            this.usersubmit = __is.readBool();
            this.devicesubmit = __is.readBool();
        },
        false);

    LXGrid.App.Questionnaire.LXSubmitStatusPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXSubmitStatus.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXSubmitStatus, LXGrid.App.Questionnaire.LXSubmitStatusPrx);
    Slice.defineSequence(LXGrid.App.Questionnaire, "LXSubmitStatusSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Questionnaire.LXSubmitStatus");

    LXGrid.App.Questionnaire.LXAnswer = Slice.defineObject(
        function(choice, blank)
        {
            Ice.Object.call(this);
            this.choice = choice !== undefined ? choice : null;
            this.blank = blank !== undefined ? blank : "";
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXAnswer"
        ],
        -1,
        function(__os)
        {
            Ice.IntSeqHelper.write(__os, this.choice);
            __os.writeString(this.blank);
        },
        function(__is)
        {
            this.choice = Ice.IntSeqHelper.read(__is);
            this.blank = __is.readString();
        },
        false);

    LXGrid.App.Questionnaire.LXAnswerPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXAnswer.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXAnswer, LXGrid.App.Questionnaire.LXAnswerPrx);
    Slice.defineSequence(LXGrid.App.Questionnaire, "LXAnswerSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Questionnaire.LXAnswer");

    LXGrid.App.Questionnaire.LXUserBlank = Slice.defineObject(
        function(userid, blank, submittime)
        {
            Ice.Object.call(this);
            this.userid = userid !== undefined ? userid : 0;
            this.blank = blank !== undefined ? blank : "";
            this.submittime = submittime !== undefined ? submittime : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXUserBlank"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.userid);
            __os.writeString(this.blank);
            __os.writeLong(this.submittime);
        },
        function(__is)
        {
            this.userid = __is.readInt();
            this.blank = __is.readString();
            this.submittime = __is.readLong();
        },
        false);

    LXGrid.App.Questionnaire.LXUserBlankPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXUserBlank.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXUserBlank, LXGrid.App.Questionnaire.LXUserBlankPrx);
    Slice.defineSequence(LXGrid.App.Questionnaire, "LXUserBlankSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Questionnaire.LXUserBlank");

    LXGrid.App.Questionnaire.LXCondition = Slice.defineObject(
        function(question, option)
        {
            Ice.Object.call(this);
            this.question = question !== undefined ? question : 0;
            this.option = option !== undefined ? option : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXCondition"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.question);
            __os.writeInt(this.option);
        },
        function(__is)
        {
            this.question = __is.readInt();
            this.option = __is.readInt();
        },
        false);

    LXGrid.App.Questionnaire.LXConditionPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXCondition.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXCondition, LXGrid.App.Questionnaire.LXConditionPrx);
    Slice.defineSequence(LXGrid.App.Questionnaire, "LXConditionSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Questionnaire.LXCondition");
    Slice.defineDictionary(LXGrid.App.Questionnaire, "LXStatScopeDict", "LXStatScopeDictHelper", "Ice.IntHelper", "LXGrid.Common.IntDictHelper", false, undefined, undefined, Ice.HashMap.compareEquals);
    Slice.defineSequence(LXGrid.App.Questionnaire, "LXStatQuestionSeqHelper", "Ice.IntSeqHelper", false);

    LXGrid.App.Questionnaire.LXTypeQuest = Slice.defineObject(
        function(type, questid, usecount, readcount, time)
        {
            Ice.Object.call(this);
            this.type = type !== undefined ? type : 0;
            this.questid = questid !== undefined ? questid : "";
            this.usecount = usecount !== undefined ? usecount : 0;
            this.readcount = readcount !== undefined ? readcount : 0;
            this.time = time !== undefined ? time : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Questionnaire::LXTypeQuest"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.type);
            __os.writeString(this.questid);
            __os.writeInt(this.usecount);
            __os.writeInt(this.readcount);
            __os.writeLong(this.time);
        },
        function(__is)
        {
            this.type = __is.readInt();
            this.questid = __is.readString();
            this.usecount = __is.readInt();
            this.readcount = __is.readInt();
            this.time = __is.readLong();
        },
        false);

    LXGrid.App.Questionnaire.LXTypeQuestPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Questionnaire.LXTypeQuest.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Questionnaire.LXTypeQuest, LXGrid.App.Questionnaire.LXTypeQuestPrx);
    Slice.defineSequence(LXGrid.App.Questionnaire, "LXTypeQuestSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Questionnaire.LXTypeQuest");

    LXGrid.App.Questionnaire.LXQuestDataStat = Slice.defineStruct(
        function(publishernum, pubnum, submitnum)
        {
            this.publishernum = publishernum !== undefined ? publishernum : 0;
            this.pubnum = pubnum !== undefined ? pubnum : 0;
            this.submitnum = submitnum !== undefined ? submitnum : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.publishernum);
            __os.writeInt(this.pubnum);
            __os.writeInt(this.submitnum);
        },
        function(__is)
        {
            this.publishernum = __is.readInt();
            this.pubnum = __is.readInt();
            this.submitnum = __is.readInt();
        },
        12, 
        true);
    Slice.defineDictionary(LXGrid.App.Questionnaire, "LXDataStatDict", "LXDataStatDictHelper", "Ice.IntHelper", "LXGrid.App.Questionnaire.LXQuestDataStat", true, undefined, undefined, Ice.HashMap.compareEquals);
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
