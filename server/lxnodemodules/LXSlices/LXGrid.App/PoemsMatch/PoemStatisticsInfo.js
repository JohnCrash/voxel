// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `PoemStatisticsInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var LXGrid = __M.module("LXGrid");

    LXGrid.App = __M.module("LXGrid.App");

    LXGrid.App.PoemsMatch = __M.module("LXGrid.App.PoemsMatch");

    LXGrid.App.PoemsMatch.PoemsUserStatisticsInfo = Slice.defineObject(
        function(UserId, UserName, Ranking, Level, FirstPlayDate, TotalPlayNum, TotalExp, TalentValue, BeatPercent)
        {
            Ice.Object.call(this);
            this.UserId = UserId !== undefined ? UserId : 0;
            this.UserName = UserName !== undefined ? UserName : "";
            this.Ranking = Ranking !== undefined ? Ranking : 0;
            this.Level = Level !== undefined ? Level : 0;
            this.FirstPlayDate = FirstPlayDate !== undefined ? FirstPlayDate : "";
            this.TotalPlayNum = TotalPlayNum !== undefined ? TotalPlayNum : 0;
            this.TotalExp = TotalExp !== undefined ? TotalExp : 0;
            this.TalentValue = TalentValue !== undefined ? TalentValue : 0;
            this.BeatPercent = BeatPercent !== undefined ? BeatPercent : 0.0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::PoemsMatch::PoemsUserStatisticsInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.UserId);
            __os.writeString(this.UserName);
            __os.writeInt(this.Ranking);
            __os.writeInt(this.Level);
            __os.writeString(this.FirstPlayDate);
            __os.writeInt(this.TotalPlayNum);
            __os.writeInt(this.TotalExp);
            __os.writeInt(this.TalentValue);
            __os.writeFloat(this.BeatPercent);
        },
        function(__is)
        {
            this.UserId = __is.readInt();
            this.UserName = __is.readString();
            this.Ranking = __is.readInt();
            this.Level = __is.readInt();
            this.FirstPlayDate = __is.readString();
            this.TotalPlayNum = __is.readInt();
            this.TotalExp = __is.readInt();
            this.TalentValue = __is.readInt();
            this.BeatPercent = __is.readFloat();
        },
        false);

    LXGrid.App.PoemsMatch.PoemsUserStatisticsInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.PoemsMatch.PoemsUserStatisticsInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.PoemsMatch.PoemsUserStatisticsInfo, LXGrid.App.PoemsMatch.PoemsUserStatisticsInfoPrx);
    Slice.defineSequence(LXGrid.App.PoemsMatch, "PoemsUserStatisticsInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.PoemsMatch.PoemsUserStatisticsInfo");

    LXGrid.App.PoemsMatch.PoemsAreaStatisticsInfo = Slice.defineObject(
        function(AreaId, AreaName, Ranking, AreaType, JoinPlayerNum, TotalPlayNum, PercentPlayNum, PercentExp, OverFiveGradeNum, BeatPercent)
        {
            Ice.Object.call(this);
            this.AreaId = AreaId !== undefined ? AreaId : 0;
            this.AreaName = AreaName !== undefined ? AreaName : "";
            this.Ranking = Ranking !== undefined ? Ranking : 0;
            this.AreaType = AreaType !== undefined ? AreaType : 0;
            this.JoinPlayerNum = JoinPlayerNum !== undefined ? JoinPlayerNum : 0;
            this.TotalPlayNum = TotalPlayNum !== undefined ? TotalPlayNum : 0;
            this.PercentPlayNum = PercentPlayNum !== undefined ? PercentPlayNum : 0;
            this.PercentExp = PercentExp !== undefined ? PercentExp : 0;
            this.OverFiveGradeNum = OverFiveGradeNum !== undefined ? OverFiveGradeNum : 0;
            this.BeatPercent = BeatPercent !== undefined ? BeatPercent : 0.0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::PoemsMatch::PoemsAreaStatisticsInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.AreaId);
            __os.writeString(this.AreaName);
            __os.writeInt(this.Ranking);
            __os.writeInt(this.AreaType);
            __os.writeInt(this.JoinPlayerNum);
            __os.writeInt(this.TotalPlayNum);
            __os.writeInt(this.PercentPlayNum);
            __os.writeInt(this.PercentExp);
            __os.writeInt(this.OverFiveGradeNum);
            __os.writeFloat(this.BeatPercent);
        },
        function(__is)
        {
            this.AreaId = __is.readInt();
            this.AreaName = __is.readString();
            this.Ranking = __is.readInt();
            this.AreaType = __is.readInt();
            this.JoinPlayerNum = __is.readInt();
            this.TotalPlayNum = __is.readInt();
            this.PercentPlayNum = __is.readInt();
            this.PercentExp = __is.readInt();
            this.OverFiveGradeNum = __is.readInt();
            this.BeatPercent = __is.readFloat();
        },
        false);

    LXGrid.App.PoemsMatch.PoemsAreaStatisticsInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.PoemsMatch.PoemsAreaStatisticsInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.PoemsMatch.PoemsAreaStatisticsInfo, LXGrid.App.PoemsMatch.PoemsAreaStatisticsInfoPrx);
    Slice.defineSequence(LXGrid.App.PoemsMatch, "PoemsAreaStatisticsInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.PoemsMatch.PoemsAreaStatisticsInfo");
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
