// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `BattleInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var LXGrid = __M.module("LXGrid");

    LXGrid.App = __M.module("LXGrid.App");

    LXGrid.App.PoemsBattle = __M.module("LXGrid.App.PoemsBattle");

    LXGrid.App.PoemsBattle.BattleInfo = Slice.defineObject(
        function(Id, BattleName, Cost, CostType, ReducePhysical, WinPrize, LostPrize, WinScore, LostScore)
        {
            Ice.Object.call(this);
            this.Id = Id !== undefined ? Id : 0;
            this.BattleName = BattleName !== undefined ? BattleName : "";
            this.Cost = Cost !== undefined ? Cost : 0;
            this.CostType = CostType !== undefined ? CostType : 0;
            this.ReducePhysical = ReducePhysical !== undefined ? ReducePhysical : 0;
            this.WinPrize = WinPrize !== undefined ? WinPrize : 0;
            this.LostPrize = LostPrize !== undefined ? LostPrize : 0;
            this.WinScore = WinScore !== undefined ? WinScore : 0;
            this.LostScore = LostScore !== undefined ? LostScore : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::PoemsBattle::BattleInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.Id);
            __os.writeString(this.BattleName);
            __os.writeInt(this.Cost);
            __os.writeInt(this.CostType);
            __os.writeInt(this.ReducePhysical);
            __os.writeInt(this.WinPrize);
            __os.writeInt(this.LostPrize);
            __os.writeInt(this.WinScore);
            __os.writeInt(this.LostScore);
        },
        function(__is)
        {
            this.Id = __is.readInt();
            this.BattleName = __is.readString();
            this.Cost = __is.readInt();
            this.CostType = __is.readInt();
            this.ReducePhysical = __is.readInt();
            this.WinPrize = __is.readInt();
            this.LostPrize = __is.readInt();
            this.WinScore = __is.readInt();
            this.LostScore = __is.readInt();
        },
        false);

    LXGrid.App.PoemsBattle.BattleInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.PoemsBattle.BattleInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.PoemsBattle.BattleInfo, LXGrid.App.PoemsBattle.BattleInfoPrx);
    Slice.defineSequence(LXGrid.App.PoemsBattle, "BattleInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.PoemsBattle.BattleInfo");

    LXGrid.App.PoemsBattle.BattleStatistics = Slice.defineObject(
        function(BattleId, OnLineNumber)
        {
            Ice.Object.call(this);
            this.BattleId = BattleId !== undefined ? BattleId : 0;
            this.OnLineNumber = OnLineNumber !== undefined ? OnLineNumber : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::PoemsBattle::BattleStatistics"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.BattleId);
            __os.writeInt(this.OnLineNumber);
        },
        function(__is)
        {
            this.BattleId = __is.readInt();
            this.OnLineNumber = __is.readInt();
        },
        false);

    LXGrid.App.PoemsBattle.BattleStatisticsPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.PoemsBattle.BattleStatistics.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.PoemsBattle.BattleStatistics, LXGrid.App.PoemsBattle.BattleStatisticsPrx);
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
