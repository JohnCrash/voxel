// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceCollectDefine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = require("LXGrid.Common/LXSliceDefine").LXGrid;
    var Slice = Ice.Slice;

    LXGrid.App = __M.module("LXGrid.App");

    LXGrid.App.Collect = __M.module("LXGrid.App.Collect");

    LXGrid.App.Collect.LXEnumErrorCollect = Slice.defineEnum([
        ['LXErrorCollectOverLimit', 10000]]);

    LXGrid.App.Collect.LXCollectInfo = Slice.defineObject(
        function(content, collecttime)
        {
            Ice.Object.call(this);
            this.content = content !== undefined ? content : "";
            this.collecttime = collecttime !== undefined ? collecttime : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Collect::LXCollectInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.content);
            __os.writeLong(this.collecttime);
        },
        function(__is)
        {
            this.content = __is.readString();
            this.collecttime = __is.readLong();
        },
        false);

    LXGrid.App.Collect.LXCollectInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Collect.LXCollectInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Collect.LXCollectInfo, LXGrid.App.Collect.LXCollectInfoPrx);
    Slice.defineSequence(LXGrid.App.Collect, "LXCollectInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Collect.LXCollectInfo");
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
