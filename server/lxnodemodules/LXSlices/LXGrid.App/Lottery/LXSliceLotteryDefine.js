// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceLotteryDefine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = require("LXGrid.Common/LXSliceDefine").LXGrid;
    var Slice = Ice.Slice;

    LXGrid.App = __M.module("LXGrid.App");

    LXGrid.App.Lottery = __M.module("LXGrid.App.Lottery");

    LXGrid.App.Lottery.LXEnumErrorLottery = Slice.defineEnum([
        ['LXErrorSection', 7000], ['LXErrorLotteryInvalid', 7001], ['LXErrorLotteryNotStart', 7002], ['LXErrorLotteryExpired', 7003], ['LXErrorTicketNotEnough', 7004],
        ['LXErrorNotWin', 7005], ['LXErrorExchangeNotAllow', 7006], ['LXErrorExchangeLimit', 7007], ['LXErrorGoldNotEnough', 7008], ['LXErrorCashSubmit', 7009],
        ['LXErrorPrizeNotEnough', 7010]]);

    LXGrid.App.Lottery.LXDeleteType = Slice.defineEnum([
        ['LXDeleteType_Normal', 0], ['LXDeleteType_Delete', 1]]);

    LXGrid.App.Lottery.LXEnumTicketState = Slice.defineEnum([
        ['LXTicketState_Normal', 0], ['LXTicketState_CashIn', 1], ['LXTicketState_Complate', 2], ['LXTicketState_Invalid', 4], ['LXTicketState_Delete', 8]]);

    LXGrid.App.Lottery.LXEnumTicketSourceType = Slice.defineEnum([
        ['LXTicketSourceType_System', 0], ['LXTicketSourceType_Exchange', 1], ['LXTicketSourceType_Mission', 2]]);

    LXGrid.App.Lottery.LXEnumPrizeType = Slice.defineEnum([
        ['LXPrizeType_Null', 0], ['LXPrizeType_Goods', 1], ['LXPrizeType_Gold', 2]]);

    LXGrid.App.Lottery.LXEnumWinType = Slice.defineEnum([
        ['LXWinType_NotUse', 0], ['LXWinType_Null', 1], ['LXWinType_Win', 2], ['LXWinType_Preset', 3]]);

    LXGrid.App.Lottery.LXEnumTicketRewardType = Slice.defineEnum([
        ['LXTicketRewardType_Null', 0], ['LXTicketRewardType_HomeWork', 1]]);

    LXGrid.App.Lottery.LXPrizeInfo = Slice.defineObject(
        function(prizeid, name, describe, type, totalnum, pernum, lavenum, preimage, detimage)
        {
            Ice.Object.call(this);
            this.prizeid = prizeid !== undefined ? prizeid : 0;
            this.name = name !== undefined ? name : "";
            this.describe = describe !== undefined ? describe : "";
            this.type = type !== undefined ? type : 0;
            this.totalnum = totalnum !== undefined ? totalnum : 0;
            this.pernum = pernum !== undefined ? pernum : 0;
            this.lavenum = lavenum !== undefined ? lavenum : 0;
            this.preimage = preimage !== undefined ? preimage : "";
            this.detimage = detimage !== undefined ? detimage : "";
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXPrizeInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.prizeid);
            __os.writeString(this.name);
            __os.writeString(this.describe);
            __os.writeInt(this.type);
            __os.writeInt(this.totalnum);
            __os.writeInt(this.pernum);
            __os.writeInt(this.lavenum);
            __os.writeString(this.preimage);
            __os.writeString(this.detimage);
        },
        function(__is)
        {
            this.prizeid = __is.readInt();
            this.name = __is.readString();
            this.describe = __is.readString();
            this.type = __is.readInt();
            this.totalnum = __is.readInt();
            this.pernum = __is.readInt();
            this.lavenum = __is.readInt();
            this.preimage = __is.readString();
            this.detimage = __is.readString();
        },
        false);

    LXGrid.App.Lottery.LXPrizeInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Lottery.LXPrizeInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXPrizeInfo, LXGrid.App.Lottery.LXPrizeInfoPrx);
    Slice.defineSequence(LXGrid.App.Lottery, "LXPrizeInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Lottery.LXPrizeInfo");

    LXGrid.App.Lottery.LXLotteryInfo = Slice.defineObject(
        function(lotteryid, name, describe, starttime, endtime, salecoins, salenum, reward)
        {
            Ice.Object.call(this);
            this.lotteryid = lotteryid !== undefined ? lotteryid : 0;
            this.name = name !== undefined ? name : "";
            this.describe = describe !== undefined ? describe : "";
            this.starttime = starttime !== undefined ? starttime : 0;
            this.endtime = endtime !== undefined ? endtime : 0;
            this.salecoins = salecoins !== undefined ? salecoins : 0;
            this.salenum = salenum !== undefined ? salenum : 0;
            this.reward = reward !== undefined ? reward : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXLotteryInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.lotteryid);
            __os.writeString(this.name);
            __os.writeString(this.describe);
            __os.writeLong(this.starttime);
            __os.writeLong(this.endtime);
            __os.writeInt(this.salecoins);
            __os.writeInt(this.salenum);
            __os.writeInt(this.reward);
        },
        function(__is)
        {
            this.lotteryid = __is.readInt();
            this.name = __is.readString();
            this.describe = __is.readString();
            this.starttime = __is.readLong();
            this.endtime = __is.readLong();
            this.salecoins = __is.readInt();
            this.salenum = __is.readInt();
            this.reward = __is.readInt();
        },
        false);

    LXGrid.App.Lottery.LXLotteryInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Lottery.LXLotteryInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXLotteryInfo, LXGrid.App.Lottery.LXLotteryInfoPrx);
    Slice.defineSequence(LXGrid.App.Lottery, "LXLotteryInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Lottery.LXLotteryInfo");

    LXGrid.App.Lottery.LXCashInfo = Slice.defineObject(
        function(couriers, name, phone, address, remark)
        {
            Ice.Object.call(this);
            this.couriers = couriers !== undefined ? couriers : "";
            this.name = name !== undefined ? name : "";
            this.phone = phone !== undefined ? phone : "";
            this.address = address !== undefined ? address : "";
            this.remark = remark !== undefined ? remark : "";
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXCashInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.couriers);
            __os.writeString(this.name);
            __os.writeString(this.phone);
            __os.writeString(this.address);
            __os.writeString(this.remark);
        },
        function(__is)
        {
            this.couriers = __is.readString();
            this.name = __is.readString();
            this.phone = __is.readString();
            this.address = __is.readString();
            this.remark = __is.readString();
        },
        false);

    LXGrid.App.Lottery.LXCashInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Lottery.LXCashInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXCashInfo, LXGrid.App.Lottery.LXCashInfoPrx);

    LXGrid.App.Lottery.LXTicketInfo = Slice.defineObject(
        function(ticketid, lotteryid, userid, source, describe, intime, wintype, drawtime, prizeid, state)
        {
            Ice.Object.call(this);
            this.ticketid = ticketid !== undefined ? ticketid : 0;
            this.lotteryid = lotteryid !== undefined ? lotteryid : 0;
            this.userid = userid !== undefined ? userid : 0;
            this.source = source !== undefined ? source : 0;
            this.describe = describe !== undefined ? describe : "";
            this.intime = intime !== undefined ? intime : 0;
            this.wintype = wintype !== undefined ? wintype : 0;
            this.drawtime = drawtime !== undefined ? drawtime : 0;
            this.prizeid = prizeid !== undefined ? prizeid : 0;
            this.state = state !== undefined ? state : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXTicketInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.ticketid);
            __os.writeInt(this.lotteryid);
            __os.writeInt(this.userid);
            __os.writeInt(this.source);
            __os.writeString(this.describe);
            __os.writeLong(this.intime);
            __os.writeInt(this.wintype);
            __os.writeLong(this.drawtime);
            __os.writeInt(this.prizeid);
            __os.writeInt(this.state);
        },
        function(__is)
        {
            this.ticketid = __is.readInt();
            this.lotteryid = __is.readInt();
            this.userid = __is.readInt();
            this.source = __is.readInt();
            this.describe = __is.readString();
            this.intime = __is.readLong();
            this.wintype = __is.readInt();
            this.drawtime = __is.readLong();
            this.prizeid = __is.readInt();
            this.state = __is.readInt();
        },
        false);

    LXGrid.App.Lottery.LXTicketInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Lottery.LXTicketInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXTicketInfo, LXGrid.App.Lottery.LXTicketInfoPrx);
    Slice.defineSequence(LXGrid.App.Lottery, "LXTicketInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Lottery.LXTicketInfo");

    LXGrid.App.Lottery.LXWinInfo = Slice.defineObject(
        function(userid, prizeid, drawtime)
        {
            Ice.Object.call(this);
            this.userid = userid !== undefined ? userid : 0;
            this.prizeid = prizeid !== undefined ? prizeid : 0;
            this.drawtime = drawtime !== undefined ? drawtime : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXWinInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.userid);
            __os.writeInt(this.prizeid);
            __os.writeLong(this.drawtime);
        },
        function(__is)
        {
            this.userid = __is.readInt();
            this.prizeid = __is.readInt();
            this.drawtime = __is.readLong();
        },
        false);

    LXGrid.App.Lottery.LXWinInfoPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Lottery.LXWinInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXWinInfo, LXGrid.App.Lottery.LXWinInfoPrx);
    Slice.defineSequence(LXGrid.App.Lottery, "LXWinInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Lottery.LXWinInfo");

    LXGrid.App.Lottery.LXAwardsOption = Slice.defineObject(
        function(awardsdate, awardstotal, awardscount)
        {
            Ice.Object.call(this);
            this.awardsdate = awardsdate !== undefined ? awardsdate : 0;
            this.awardstotal = awardstotal !== undefined ? awardstotal : 0;
            this.awardscount = awardscount !== undefined ? awardscount : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXAwardsOption"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.awardsdate);
            __os.writeInt(this.awardstotal);
            __os.writeInt(this.awardscount);
        },
        function(__is)
        {
            this.awardsdate = __is.readInt();
            this.awardstotal = __is.readInt();
            this.awardscount = __is.readInt();
        },
        false);

    LXGrid.App.Lottery.LXAwardsOptionPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Lottery.LXAwardsOption.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXAwardsOption, LXGrid.App.Lottery.LXAwardsOptionPrx);
    Slice.defineSequence(LXGrid.App.Lottery, "LXAwardsOptionSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Lottery.LXAwardsOption");

    LXGrid.App.Lottery.LXPrizeCommInfo = Slice.defineObject(
        function(prizeid, name, describe, type, totalnum, pernum, lavenum, preimage, detimage, rate, presets)
        {
            LXGrid.App.Lottery.LXPrizeInfo.call(this, prizeid, name, describe, type, totalnum, pernum, lavenum, preimage, detimage);
            this.rate = rate !== undefined ? rate : 0;
            this.presets = presets !== undefined ? presets : null;
        },
        LXGrid.App.Lottery.LXPrizeInfo, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXPrizeCommInfo",
            "::LXGrid::App::Lottery::LXPrizeInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.rate);
            LXGrid.App.Lottery.LXAwardsOptionSeqHelper.write(__os, this.presets);
        },
        function(__is)
        {
            this.rate = __is.readInt();
            this.presets = LXGrid.App.Lottery.LXAwardsOptionSeqHelper.read(__is);
        },
        false);

    LXGrid.App.Lottery.LXPrizeCommInfoPrx = Slice.defineProxy(LXGrid.App.Lottery.LXPrizeInfoPrx, LXGrid.App.Lottery.LXPrizeCommInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXPrizeCommInfo, LXGrid.App.Lottery.LXPrizeCommInfoPrx);
    Slice.defineSequence(LXGrid.App.Lottery, "LXPrizeCommInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Lottery.LXPrizeCommInfo");
    Slice.defineSequence(LXGrid.App.Lottery, "LXLotteryPrizeSeqHelper", "LXGrid.App.Lottery.LXPrizeCommInfoSeqHelper", false);

    LXGrid.App.Lottery.LXLotteryCommInfo = Slice.defineObject(
        function(lotteryid, name, describe, starttime, endtime, salecoins, salenum, reward, creator, intime)
        {
            LXGrid.App.Lottery.LXLotteryInfo.call(this, lotteryid, name, describe, starttime, endtime, salecoins, salenum, reward);
            this.creator = creator !== undefined ? creator : 0;
            this.intime = intime !== undefined ? intime : 0;
        },
        LXGrid.App.Lottery.LXLotteryInfo, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXLotteryCommInfo",
            "::LXGrid::App::Lottery::LXLotteryInfo"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.creator);
            __os.writeLong(this.intime);
        },
        function(__is)
        {
            this.creator = __is.readInt();
            this.intime = __is.readLong();
        },
        false);

    LXGrid.App.Lottery.LXLotteryCommInfoPrx = Slice.defineProxy(LXGrid.App.Lottery.LXLotteryInfoPrx, LXGrid.App.Lottery.LXLotteryCommInfo.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXLotteryCommInfo, LXGrid.App.Lottery.LXLotteryCommInfoPrx);
    Slice.defineSequence(LXGrid.App.Lottery, "LXLotteryCommInfoSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Lottery.LXLotteryCommInfo");

    LXGrid.App.Lottery.LXPresetWin = Slice.defineObject(
        function(prizeid, userid, needdraw, drawtime)
        {
            Ice.Object.call(this);
            this.prizeid = prizeid !== undefined ? prizeid : 0;
            this.userid = userid !== undefined ? userid : 0;
            this.needdraw = needdraw !== undefined ? needdraw : false;
            this.drawtime = drawtime !== undefined ? drawtime : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXPresetWin"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.prizeid);
            __os.writeInt(this.userid);
            __os.writeBool(this.needdraw);
            __os.writeLong(this.drawtime);
        },
        function(__is)
        {
            this.prizeid = __is.readInt();
            this.userid = __is.readInt();
            this.needdraw = __is.readBool();
            this.drawtime = __is.readLong();
        },
        false);

    LXGrid.App.Lottery.LXPresetWinPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Lottery.LXPresetWin.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXPresetWin, LXGrid.App.Lottery.LXPresetWinPrx);
    Slice.defineSequence(LXGrid.App.Lottery, "LXPresetWinSeqHelper", "Ice.ObjectHelper", false, "LXGrid.App.Lottery.LXPresetWin");
    Slice.defineDictionary(LXGrid.App.Lottery, "LXPrizeStat", "LXPrizeStatHelper", "Ice.IntHelper", "Ice.IntHelper", true, undefined, undefined);

    LXGrid.App.Lottery.LXLotteryStat = Slice.defineObject(
        function(ticketcount, usercount, prizecount)
        {
            Ice.Object.call(this);
            this.ticketcount = ticketcount !== undefined ? ticketcount : 0;
            this.usercount = usercount !== undefined ? usercount : 0;
            this.prizecount = prizecount !== undefined ? prizecount : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::App::Lottery::LXLotteryStat"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.ticketcount);
            __os.writeInt(this.usercount);
            LXGrid.App.Lottery.LXPrizeStatHelper.write(__os, this.prizecount);
        },
        function(__is)
        {
            this.ticketcount = __is.readInt();
            this.usercount = __is.readInt();
            this.prizecount = LXGrid.App.Lottery.LXPrizeStatHelper.read(__is);
        },
        false);

    LXGrid.App.Lottery.LXLotteryStatPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.App.Lottery.LXLotteryStat.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.App.Lottery.LXLotteryStat, LXGrid.App.Lottery.LXLotteryStatPrx);
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
