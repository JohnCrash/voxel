// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceDefine.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = require("LXGrid.System/LXSliceBase").LXGrid;
    var Slice = Ice.Slice;

    LXGrid.OM = __M.module("LXGrid.OM");

    LXGrid.OM.Log = __M.module("LXGrid.OM.Log");

    LXGrid.OM.Log.Result = Slice.defineObject(
        function(LXReturn, Data)
        {
            Ice.Object.call(this);
            this.LXReturn = LXReturn !== undefined ? LXReturn : new LXGrid.Common.LXReturn();
            this.Data = Data !== undefined ? Data : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::LXGrid::OM::Log::Result"
        ],
        -1,
        function(__os)
        {
            LXGrid.Common.LXReturn.write(__os, this.LXReturn);
            __os.writeObject(this.Data);
        },
        function(__is)
        {
            var self = this;
            this.LXReturn = LXGrid.Common.LXReturn.read(__is, this.LXReturn);
            __is.readObject(function(__o){ self.Data = __o; }, Ice.Object);
        },
        false);

    LXGrid.OM.Log.ResultPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.OM.Log.Result.ice_staticId, undefined);

    Slice.defineOperations(LXGrid.OM.Log.Result, LXGrid.OM.Log.ResultPrx);

    LXGrid.OM.Log.LXEnumAlarmType = Slice.defineEnum([
        ['LXAlarmType_CPU', 1], ['LXAlarmType_Mem', 2], ['LXAlarmType_Disk', 4], ['LXAlarmType_PThread', 8], ['LXAlarmType_PHandle', 16]]);
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
