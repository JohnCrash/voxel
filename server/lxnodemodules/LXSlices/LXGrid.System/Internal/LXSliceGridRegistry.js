// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `LXSliceGridRegistry.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var LXGrid = __M.require(module, 
    [
        "LXGrid.System/LXSliceBase",
        "LXGrid.System/LXSliceGrid"
    ]).LXGrid;
    
    var Slice = Ice.Slice;

    LXGrid.System = __M.module("LXGrid.System");

    Object.defineProperty(LXGrid.System, 'IObjectGridRegistryName', {
        value: "IObjectGridRegistry"
    });

    LXGrid.System.IObjectGridRegistry = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            LXGrid.Common.IObjectBase
        ], 2,
        [
            "::Ice::Object",
            "::LXGrid::Common::IObjectBase",
            "::LXGrid::System::IObjectGridRegistry"
        ],
        -1, undefined, undefined, false);

    LXGrid.System.IObjectGridRegistryPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.System.IObjectGridRegistry.ice_staticId, [
        LXGrid.Common.IObjectBasePrx]);

    Slice.defineOperations(LXGrid.System.IObjectGridRegistry, LXGrid.System.IObjectGridRegistryPrx,
    {
        "KeepAlive": [, , , 1, , [LXGrid.Common.LXReturn], [[7], ["LXGrid.System.IObjectGridPrx"]], , , , ],
        "QueryGrid": [, 2, 2, 1, , [LXGrid.Common.LXReturn], [[7]], [["LXGrid.System.IObjectGridPrx"]], , , ]
    });

    Object.defineProperty(LXGrid.System, 'IEventGridRegistrySynName', {
        value: "IEventGridRegistrySyn"
    });

    LXGrid.System.IEventGridRegistrySyn = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            LXGrid.Common.IObjectBase
        ], 2,
        [
            "::Ice::Object",
            "::LXGrid::Common::IObjectBase",
            "::LXGrid::System::IEventGridRegistrySyn"
        ],
        -1, undefined, undefined, false);

    LXGrid.System.IEventGridRegistrySynPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.System.IEventGridRegistrySyn.ice_staticId, [
        LXGrid.Common.IObjectBasePrx]);

    Slice.defineOperations(LXGrid.System.IEventGridRegistrySyn, LXGrid.System.IEventGridRegistrySynPrx,
    {
        "OnAddGrid": [, , , , , , [[7], ["LXGrid.System.IObjectGridPrx"]], , , , ]
    });

    Object.defineProperty(LXGrid.System, 'IEventGridRegistryStartupName', {
        value: "IEventGridRegistryStartup"
    });

    LXGrid.System.IEventGridRegistryStartup = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            LXGrid.Common.IObjectBase
        ], 2,
        [
            "::Ice::Object",
            "::LXGrid::Common::IObjectBase",
            "::LXGrid::System::IEventGridRegistryStartup"
        ],
        -1, undefined, undefined, false);

    LXGrid.System.IEventGridRegistryStartupPrx = Slice.defineProxy(Ice.ObjectPrx, LXGrid.System.IEventGridRegistryStartup.ice_staticId, [
        LXGrid.Common.IObjectBasePrx]);

    Slice.defineOperations(LXGrid.System.IEventGridRegistryStartup, LXGrid.System.IEventGridRegistryStartupPrx,
    {
        "OnStartup": [, , , , , , [["LXGrid.System.IObjectGridRegistryPrx"]], , , , ]
    });
    exports.LXGrid = LXGrid;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
